<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAICAgICAgICAgICAgICAwQDAgIDBAUEBAQEBAUGBQUFBQUF
        BgYHBwgHBwYJCQoKCQkMDAwMDAwMDAwMDAwMDAz/2wBDAQMDAwUEBQkGBgkNCwkLDQ8ODg4ODw8MDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABQAOsDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+6ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgA
        oAKACgAoAKACgAoAKACgAoAh3fSgVw3fSgLhu+lAXDd9KAufM37Qf7UvgT4BWK2t/nxF42vofN0nwfaS
        BZNp4E11LhvIjz0OCzfwqcEjWnSczgxmYQwy11fY/PLxt8ePjp4i0qDxj8X/AIyaV+zV8PdajM+gaJYQ
        yDWdQtmyFksrCAm+lRunmzSxxHqDiu6jhefSEb/l955Lr4mt705ckfx+7c+Rb39oj9mHStR+1w6t+0/4
        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
</value>
  </data>
</root>